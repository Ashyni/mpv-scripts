From 26d4fe44b4466c6707fa241340de354c66b419cc Mon Sep 17 00:00:00 2001
From: Ashyni <jeffrey.c@tuta.io>
Date: Thu, 9 Feb 2023 23:58:18 +0100
Subject: [PATCH] avfilter: add vf_dummysync

---
 doc/filters.texi           |  16 ++++-
 libavfilter/Makefile       |   1 +
 libavfilter/allfilters.c   |   1 +
 libavfilter/vf_dummysync.c | 123 +++++++++++++++++++++++++++++++++++++
 4 files changed, 139 insertions(+), 2 deletions(-)
 create mode 100644 libavfilter/vf_dummysync.c

diff --git a/doc/filters.texi b/doc/filters.texi
index f17488c7c7..02867ceff4 100644
--- a/doc/filters.texi
+++ b/doc/filters.texi
@@ -12941,8 +12941,20 @@ For more information about fontconfig, check:
 For more information about libfribidi, check:
 @url{http://fribidi.org/}.
 
-For more information about libharfbuzz, check:
-@url{https://github.com/harfbuzz/harfbuzz}.
+@section dummysync
+
+This filter takes in input two input videos, the first input is considered
+the "main" source and is passed unchanged to the output.
+
+@subsection Examples
+@itemize
+@item
+Read ahead cropdetect metadata with [dummy] pts set 1sec in advance over [main]
+and sync without touching the "main" source.
+@example
+[in]split[main][dummy];[dummy]setpts=PTS-1/TB,cropdetect[dummy];
+[main][dummy]dummysync[out]
+@end example
 
 @section edgedetect
 
diff --git a/libavfilter/Makefile b/libavfilter/Makefile
index 9b7813575a..65055803f3 100644
--- a/libavfilter/Makefile
+++ b/libavfilter/Makefile
@@ -289,6 +289,7 @@ OBJS-$(CONFIG_DRAWBOX_FILTER)                += vf_drawbox.o
 OBJS-$(CONFIG_DRAWGRAPH_FILTER)              += f_drawgraph.o
 OBJS-$(CONFIG_DRAWGRID_FILTER)               += vf_drawbox.o
 OBJS-$(CONFIG_DRAWTEXT_FILTER)               += vf_drawtext.o
+OBJS-$(CONFIG_DUMMYSYNC_FILTER)              += vf_dummysync.o framesync.o
 OBJS-$(CONFIG_EDGEDETECT_FILTER)             += vf_edgedetect.o edge_common.o
 OBJS-$(CONFIG_ELBG_FILTER)                   += vf_elbg.o
 OBJS-$(CONFIG_ENTROPY_FILTER)                += vf_entropy.o
diff --git a/libavfilter/allfilters.c b/libavfilter/allfilters.c
index 9a7fadc58d..10c1b17c13 100644
--- a/libavfilter/allfilters.c
+++ b/libavfilter/allfilters.c
@@ -265,6 +265,7 @@ extern const AVFilter ff_vf_drawbox;
 extern const AVFilter ff_vf_drawgraph;
 extern const AVFilter ff_vf_drawgrid;
 extern const AVFilter ff_vf_drawtext;
+extern const AVFilter ff_vf_dummysync;
 extern const AVFilter ff_vf_edgedetect;
 extern const AVFilter ff_vf_elbg;
 extern const AVFilter ff_vf_entropy;
diff --git a/libavfilter/vf_dummysync.c b/libavfilter/vf_dummysync.c
new file mode 100644
index 0000000000..a0fdf97cea
--- /dev/null
+++ b/libavfilter/vf_dummysync.c
@@ -0,0 +1,123 @@
+/*
+ * Copyright (c) 2023 Jeffrey Chapuis
+ *
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+/**
+ * @file
+ * Sync two video streams, output main video stream unchanged.
+ */
+
+#include "framesync.h"
+#include "internal.h"
+
+typedef struct DummySyncContext {
+    FFFrameSync fs;
+} DummySyncContext;
+
+static int do_dummysync(FFFrameSync *fs)
+{
+    AVFilterContext *ctx = fs->parent;
+    AVFrame *main, *dummy;
+    int ret;
+
+    if ((ret = ff_framesync_dualinput_get(fs, &main, &dummy)) < 0)
+        return ret;
+
+    return ff_filter_frame(ctx->outputs[0], main);
+}
+
+static av_cold int init(AVFilterContext *ctx)
+{
+    DummySyncContext *s = ctx->priv;
+
+    s->fs.on_event = do_dummysync;
+    return 0;
+}
+
+static int config_output(AVFilterLink *outlink)
+{
+    AVFilterContext *ctx = outlink->src;
+    DummySyncContext *s = ctx->priv;
+    AVFilterLink *mainlink = ctx->inputs[0];
+    int ret;
+
+    if ((ret = ff_framesync_init_dualinput(&s->fs, ctx)) < 0)
+        return ret;
+
+    outlink->w = mainlink->w;
+    outlink->h = mainlink->h;
+    outlink->time_base = mainlink->time_base;
+    outlink->sample_aspect_ratio = mainlink->sample_aspect_ratio;
+    outlink->frame_rate = mainlink->frame_rate;
+    if ((ret = ff_framesync_configure(&s->fs)) < 0)
+        return ret;
+
+    outlink->time_base = s->fs.time_base;
+    if (av_cmp_q(mainlink->time_base, outlink->time_base) ||
+        av_cmp_q(ctx->inputs[1]->time_base, outlink->time_base))
+        av_log(ctx, AV_LOG_WARNING, "not matching timebases found between first input: %d/%d and second input %d/%d, results may be incorrect!\n",
+               mainlink->time_base.num, mainlink->time_base.den,
+               ctx->inputs[1]->time_base.num, ctx->inputs[1]->time_base.den);
+
+    return 0;
+}
+
+static int activate(AVFilterContext *ctx)
+{
+    DummySyncContext *s = ctx->priv;
+    return ff_framesync_activate(&s->fs);
+}
+
+static av_cold void uninit(AVFilterContext *ctx)
+{
+    DummySyncContext *s = ctx->priv;
+    ff_framesync_uninit(&s->fs);
+}
+
+static const AVFilterPad dummysync_inputs[] = {
+    {
+        .name         = "main",
+        .type         = AVMEDIA_TYPE_VIDEO,
+    },{
+        .name         = "dummy",
+        .type         = AVMEDIA_TYPE_VIDEO,
+    },
+};
+
+static const AVFilterPad dummysync_outputs[] = {
+    {
+        .name          = "default",
+        .type          = AVMEDIA_TYPE_VIDEO,
+        .config_props  = config_output,
+    },
+};
+
+const AVFilter ff_vf_dummysync = {
+    .name          = "dummysync",
+    .description   = NULL_IF_CONFIG_SMALL("Sync two video streams, output main video stream unchanged."),
+    .init          = init,
+    .uninit        = uninit,
+    .activate      = activate,
+    .priv_size     = sizeof(DummySyncContext),
+    FILTER_INPUTS(dummysync_inputs),
+    FILTER_OUTPUTS(dummysync_outputs),
+    .flags         = AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL |
+                     AVFILTER_FLAG_SLICE_THREADS             |
+                     AVFILTER_FLAG_METADATA_ONLY,
+};
-- 
2.41.0

